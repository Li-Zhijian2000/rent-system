{"remainingRequest":"/home/zhijian/fourth/javaweb/rent-system/rent-vue-2.0/node_modules/babel-loader/lib/index.js!/home/zhijian/fourth/javaweb/rent-system/rent-vue-2.0/src/store.js","dependencies":[{"path":"/home/zhijian/fourth/javaweb/rent-system/rent-vue-2.0/src/store.js","mtime":1591378416460},{"path":"/home/zhijian/fourth/javaweb/rent-system/rent-vue-2.0/node_modules/cache-loader/dist/cjs.js","mtime":1590898200625},{"path":"/home/zhijian/fourth/javaweb/rent-system/rent-vue-2.0/node_modules/babel-loader/lib/index.js","mtime":1590898200625}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find-index\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.find\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport debug from 'debug';\nimport { findIndex } from \"./util\";\nvar log = debug('v3:store');\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    navTags: [],\n    isNavMenuOpen: true\n  },\n  getters: {\n    activeTag: function activeTag(state) {\n      var tag = state.navTags.find(function (item) {\n        return item.active === true;\n      });\n      return tag ? tag.index : '';\n    },\n    navTagIndexs: function navTagIndexs(state) {\n      return state.navTags.map(function (item) {\n        return item.index;\n      });\n    }\n  },\n  mutations: {\n    toggleMenuOpen: function toggleMenuOpen(state, payload) {\n      state.isNavMenuOpen = !state.isNavMenuOpen;\n    },\n    addNavTags: function addNavTags(state, view) {\n      var index = findIndex(state.navTags, 'index', view.path);\n      state.navTags.forEach(function (item) {\n        item.active = false;\n      });\n\n      if (index === -1) {\n        state.navTags.push({\n          index: view.path,\n          title: view.meta.title,\n          active: true\n        });\n      } else {\n        state.navTags[index].active = true;\n      }\n    },\n    removeOneNavTag: function removeOneNavTag(state, payload) {\n      var index = state.navTags.findIndex(function (item) {\n        return item.index === payload.index;\n      });\n\n      if (index === -1) {\n        return;\n      }\n\n      state.navTags.splice(index, 1);\n    }\n  },\n  actions: {\n    addNavTags: function addNavTags(_ref, view) {\n      var state = _ref.state,\n          commit = _ref.commit;\n      commit('addNavTags', view);\n    },\n    removeOneNavTag: function removeOneNavTag(_ref2, payload) {\n      var state = _ref2.state,\n          commit = _ref2.commit;\n      commit('removeOneNavTag', payload);\n    }\n  }\n});",{"version":3,"sources":["/home/zhijian/fourth/javaweb/rent-system/rent-vue-2.0/src/store.js"],"names":["Vue","Vuex","debug","findIndex","log","use","Store","state","navTags","isNavMenuOpen","getters","activeTag","tag","find","item","active","index","navTagIndexs","map","mutations","toggleMenuOpen","payload","addNavTags","view","path","forEach","push","title","meta","removeOneNavTag","splice","actions","commit"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport debug from 'debug'\n\nimport { findIndex } from './util'\n\nconst log = debug('v3:store')\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state: {\n    navTags: [],\n    isNavMenuOpen: true\n  },\n  getters: {\n    activeTag (state) {\n      let tag = state.navTags.find((item) => {\n        return item.active === true\n      })\n      return tag ? tag.index : ''\n    },\n    navTagIndexs (state) {\n      return state.navTags.map((item) => {\n        return item.index\n      })\n    }\n  },\n  mutations: {\n    toggleMenuOpen (state, payload) {\n      state.isNavMenuOpen = !state.isNavMenuOpen\n    },\n    addNavTags (state, view) {\n      let index = findIndex(state.navTags, 'index', view.path)\n\n      state.navTags.forEach((item) => {\n        item.active = false\n      })\n\n      if (index === -1) {\n        state.navTags.push({\n          index: view.path,\n          title: view.meta.title,\n          active: true\n        })\n      } else {\n        state.navTags[index].active = true\n      }\n    },\n    removeOneNavTag (state, payload) {\n      let index = state.navTags.findIndex((item) => {\n        return item.index === payload.index\n      })\n      if (index === -1) {\n        return\n      }\n      state.navTags.splice(index, 1)\n    }\n  },\n  actions: {\n    addNavTags ({ state, commit }, view) {\n      commit('addNavTags', view)\n    },\n    removeOneNavTag ({ state, commit }, payload) {\n      commit('removeOneNavTag', payload)\n    }\n  }\n})\n"]}]}