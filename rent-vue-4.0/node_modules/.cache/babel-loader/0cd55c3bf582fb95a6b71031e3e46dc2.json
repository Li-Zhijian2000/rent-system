{"remainingRequest":"/home/zhijian/fourth/javaweb/rent-system/rent-vue-2.0/node_modules/babel-loader/lib/index.js!/home/zhijian/fourth/javaweb/rent-system/rent-vue-2.0/src/mock/tenant.js","dependencies":[{"path":"/home/zhijian/fourth/javaweb/rent-system/rent-vue-2.0/src/mock/tenant.js","mtime":1591277173825},{"path":"/home/zhijian/fourth/javaweb/rent-system/rent-vue-2.0/node_modules/cache-loader/dist/cjs.js","mtime":1590898200625},{"path":"/home/zhijian/fourth/javaweb/rent-system/rent-vue-2.0/node_modules/babel-loader/lib/index.js","mtime":1590898200625}],"contextDependencies":[],"result":["import _readOnlyError from \"/home/zhijian/fourth/javaweb/rent-system/rent-vue-2.0/node_modules/@babel/runtime-corejs2/helpers/esm/readOnlyError\";\nimport axios from 'axios';\nimport MockAdapter from 'axios-mock-adapter';\nimport Mock from 'mockjs';\nvar mock = new MockAdapter(axios);\nvar Random = Mock.Random;\nvar tenant = {\n  balance: 1000,\n  username: 'zhijian',\n  email: '13261806700@163.com',\n  sex: '男',\n  emailActivated: false,\n  telephone: '13261806700',\n  address: 'guangdong shenzhen'\n};\nmock.onGet('/tenant').reply(200, tenant);\nmock.onPost('/tenant').reply(function (config) {\n  var body = JSON.parse(config.data);\n  tenant = (_readOnlyError(\"tenant\"), body);\n});",{"version":3,"sources":["/home/zhijian/fourth/javaweb/rent-system/rent-vue-2.0/src/mock/tenant.js"],"names":["axios","MockAdapter","Mock","mock","Random","tenant","balance","username","email","sex","emailActivated","telephone","address","onGet","reply","onPost","config","body","JSON","parse","data"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,IAAMC,IAAI,GAAG,IAAIF,WAAJ,CAAgBD,KAAhB,CAAb;AACA,IAAMI,MAAM,GAAGF,IAAI,CAACE,MAApB;AAEA,IAAMC,MAAM,GAAG;AACXC,EAAAA,OAAO,EAAE,IADE;AAEXC,EAAAA,QAAQ,EAAE,SAFC;AAGXC,EAAAA,KAAK,EAAE,qBAHI;AAIXC,EAAAA,GAAG,EAAE,GAJM;AAKXC,EAAAA,cAAc,EAAE,KALL;AAMXC,EAAAA,SAAS,EAAE,aANA;AAOXC,EAAAA,OAAO,EAAE;AAPE,CAAf;AAUAT,IAAI,CAACU,KAAL,CAAW,SAAX,EAAsBC,KAAtB,CAA4B,GAA5B,EAAiCT,MAAjC;AAEAF,IAAI,CAACY,MAAL,CAAY,SAAZ,EAAuBD,KAAvB,CAA6B,UAAAE,MAAM,EAAI;AACnC,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWH,MAAM,CAACI,IAAlB,CAAb;AACAf,EAAAA,MAAM,8BAAGY,IAAH,CAAN;AACH,CAHD","sourcesContent":["import axios from 'axios'\nimport MockAdapter from 'axios-mock-adapter'\nimport Mock from 'mockjs'\n\nconst mock = new MockAdapter(axios)\nconst Random = Mock.Random\n\nconst tenant = {\n    balance: 1000,\n    username: 'zhijian',\n    email: '13261806700@163.com',\n    sex: '男',\n    emailActivated: false,\n    telephone: '13261806700',\n    address: 'guangdong shenzhen'\n}\n\nmock.onGet('/tenant').reply(200, tenant)\n\nmock.onPost('/tenant').reply(config => {\n    const body = JSON.parse(config.data)\n    tenant = body\n})\n"]}]}